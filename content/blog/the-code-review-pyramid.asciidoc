---
title: "The Code Review Pyramid"
date: 2022-03-10T16:45:00+01:00
draft: false
markup: adoc
---
:source-highlighter: rouge
:rouge-style: base16.dark
:icons: font
:imagesdir: /images
ifdef::env-github[]
:imagesdir: ../../static/images
endif::[]

When it comes to code reviews,
it's a common phenomenon that there is much focus and long-winded discussions around mundane aspects like code formatting and style,
whereas important aspects (does the code change do what it is supposed to do, is it performant, is it backwards-compatible for existing clients, and many others) tend to get less attention.

To raise awareness for the issue and providing some guidance on aspects to focus on,
I shared a https://twitter.com/gunnarmorling/status/1501645187407388679[small visual] on Twitter the other day, which I called the "Code Review Pyramid".
Its intention is to help putting focus on those parts which matter the most during a code review (in my opinion, anyways),
and also which parts could and should be automated.

As some folks asked for a permanent, referenceable location of that resource and others wanted to have a high-res printing version, I'm putting it here again:

image::code_review_pyramid.png[]

You can also download the visual as an link:/images/code_review_pyramid.svg[SVG file, window="_blank"].

== FAQ

* _Why is it a pyramid?_
+
The lower parts of the pyramid should be the foundation of a code review and take up the most part of it.

* _Hey, that's a triangle!_
+
You might think so, but it's a pyramid from the side.

* _Which tool did you use for creating the drawing?_
+
https://excalidraw.com/[Excalidraw].
